name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version-file: '.python-version'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
  
  build-and-push:
    needs: lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          # password: ${{ secrets.GITHUB_TOKEN }}
          password: ${{ secrets.CONTAINER_REGISTRY }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - uses: azure/webapps-deploy@v2
        with:
          app-name: "proa-webapp"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: "${{ steps.meta.outputs.tags }}"
    

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   permissions:
  #       id-token: write
  #       contents: read
  #   env:
  #       TERRAFORM_DIR: "./infra"
  #       BRANCH: "main"
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
    
  #     - name: Azure CLI Login
  #       uses: azure/login@v2
  #       with:
  #         client-id: ${{ secrets.AZURE_CLIENT_ID }}
  #         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
  #         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #         audience: api://AzureADTokenExchange

  #     - name: Set up Terraform
  #       uses: hashicorp/setup-terraform@v3

  #     - name: Terraform Init
  #       run: terraform -chdir=$TERRAFORM_DIR init

  #     - name: Terraform Plan
  #       run: |
  #           terraform -chdir=$TERRAFORM_DIR plan \
  #               -var="github_username=${{ github.actor }}" \
  #               -var="github_PAT=${{ secrets.CONTAINER_REGISTRY }}" \
  #               -var="github_repo=${{ github.repository }}"\
  #               -var="repo_branch=$BRANCH"\
  #               -out main.tfplan

  #     - name: Terraform Apply
  #       run: |
  #           terraform -chdir=$TERRAFORM_DIR apply \
  #               -var="github_username=${{ github.actor }}" \
  #               -var="github_PAT=${{ secrets.CONTAINER_REGISTRY }}" \
  #               -var="github_repo=${{ github.repository }}"\
  #               -var="repo_branch=$BRANCH"\
  #               -auto-approve main.tfplan
  
  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest
      - name: Run tests
        run: pytest
